name: DOTNET Deploy API

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["DOTNET Build API"]   # <== Name of build.yaml workflow
    types:
      - completed

jobs:
  code-deploy:
    runs-on: ubuntu-latest
    needs: [code-unit-test-and-coverage, code-build-and-push-dockerimage, db-generate-and-apply-migrations]
    env:
      SSH_DIRECTORY: /home/runner/.ssh
      SSH_KEY_PATH: /home/runner/.ssh/id_rsa
      DOTNET_API_REMOTE_APP_DIR: /home/ubuntu/app/dotnet-api
      REMOTE_USER: ubuntu
      API_COMPOSE_FILE: ./cicd/dotnet-api/docker-compose-api.yaml
      REMOTE_HOST: ${{ vars.TARGET_DEPLOY_SERVER }}
      DOTNET_IMAGE_TAG: ${{ vars.DOTNET_IMAGE_TAG }}
    steps:
      - name: ‚úÖ Checkout code
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Make install script executable
        run: chmod +x cicd/scripts/install-docker.sh

      - name: üîê Set up SSH key
        run: |
          mkdir -p $SSH_DIRECTORY
          echo "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" > $SSH_KEY_PATH
          chmod 600 $SSH_KEY_PATH

      - name: üì° Add remote host to known_hosts
        run: ssh-keyscan -H "$REMOTE_HOST" >> $SSH_DIRECTORY/known_hosts

      - name: üì§ Copy files to remote server
        run: |
          ssh -i $SSH_KEY_PATH $REMOTE_USER@$REMOTE_HOST "mkdir -p $DOTNET_API_REMOTE_APP_DIR"
          scp -i $SSH_KEY_PATH $API_COMPOSE_FILE $REMOTE_USER@$REMOTE_HOST:$DOTNET_API_REMOTE_APP_DIR/
          scp -i $SSH_KEY_PATH cicd/scripts/install-docker.sh $REMOTE_USER@$REMOTE_HOST:$DOTNET_API_REMOTE_APP_DIR/

      - name: üê≥ Install Docker if needed
        run: ssh -i $SSH_KEY_PATH $REMOTE_USER@$REMOTE_HOST "bash $DOTNET_API_REMOTE_APP_DIR/install-docker.sh"

      - name: üöÄ Deploy application
        run: |
          ssh -i $SSH_KEY_PATH $REMOTE_USER@$REMOTE_HOST << EOF
            set -e
            echo "üîê Logging into GHCR..."
            echo "${{ secrets.GHCR_PAT }}" | sudo docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            cd $DOTNET_API_REMOTE_APP_DIR
            echo "üìù Writing environment variables to .env file..."
            echo "DOTNET_IMAGE_TAG=${{ vars.DOTNET_IMAGE_TAG }}" > .env
            echo "SA_PASSWORD=${{ secrets.SA_PASSWORD }}" >> .env
            echo "üì• Pulling latest image..."   
            sudo docker compose --env-file .env -f $API_COMPOSE_FILE pull
            echo "üß± Starting containers..."
            sudo docker compose --env-file .env -f $API_COMPOSE_FILE up -d
            echo "‚úÖ Deployment complete."
          EOF