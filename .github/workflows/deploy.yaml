name: Deploy to Ubuntu Server

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      REMOTE_USER: ubuntu
      REMOTE_HOST: ${{ vars.TARGET_DEPLOY_SERVER }}
      SSH_DIRECTORY: ~/.ssh
      SSH_KEY_PATH: ~/.ssh/id_rsa
      REMOTE_APP_DIR: /home/ubuntu/app
      COMPOSE_FILE_NAME: docker-compose-sql.yml

    steps:
      - name: ‚úÖ Checkout code
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Make install script executable
        run: chmod +x scripts/install-docker.sh

      - name: üîê Set up SSH key
        run: |
          mkdir -p $SSH_DIRECTORY
          echo "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" > $SSH_KEY_PATH
          chmod 600 $SSH_KEY_PATH

      - name: üì° Add remote host to known_hosts
        run: |
          ssh-keyscan -H "$REMOTE_HOST" >> ~/.ssh/known_hosts

      - name: üì§ Copy files to remote server
        run: |
          # Create remote app directory
          ssh -i $SSH_KEY_PATH $REMOTE_USER@$REMOTE_HOST "mkdir -p $REMOTE_APP_DIR"

          # Copy docker-compose file and install script
          scp -i $SSH_KEY_PATH $COMPOSE_FILE_NAME $REMOTE_USER@$REMOTE_HOST:$REMOTE_APP_DIR/
          scp -i $SSH_KEY_PATH scripts/install-docker.sh $REMOTE_USER@$REMOTE_HOST:$REMOTE_APP_DIR/

      - name: üê≥ Install Docker if needed
        run: |
          ssh -i $SSH_KEY_PATH $REMOTE_USER@$REMOTE_HOST "bash $REMOTE_APP_DIR/install-docker.sh"

      - name: üöÄ Deploy application
        run: |
          ssh -i $SSH_KEY_PATH $REMOTE_USER@$REMOTE_HOST << EOF
            set -e

            echo "üîê Logging into GHCR..."
            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

            cd $REMOTE_APP_DIR

            echo "üì• Pulling latest image..."
            docker compose -f $COMPOSE_FILE_NAME pull

            echo "üß± Starting containers..."
            docker compose -f $COMPOSE_FILE_NAME up -d

            echo "‚úÖ Deployment complete."
          EOF
